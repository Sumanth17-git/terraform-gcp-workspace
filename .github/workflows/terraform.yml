name: 'Terraform'

on:
  push:
    branches:
      - main  # Runs when code is pushed to the main branch
  pull_request:
    branches:
      - main  # Runs on PRs to main branch
  workflow_dispatch:  # Allows manual triggers

env:
  GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/gcp-credentials.json

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

 
      - name: Set Environment Variables Based on Workspace
        id: set-env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "TF_WORKSPACE=production" >> $GITHUB_ENV
            echo "GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID_PROD }}" >> $GITHUB_ENV
            echo "${{ secrets.GCP_CREDENTIALS_PROD }}" > $GOOGLE_APPLICATION_CREDENTIALS
          else
            echo "TF_WORKSPACE=dev" >> $GITHUB_ENV
            echo "GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID_DEV }}" >> $GITHUB_ENV
            echo "${{ secrets.GCP_CREDENTIALS_DEV }}" > $GOOGLE_APPLICATION_CREDENTIALS
          fi
          echo "Using workspace: $TF_WORKSPACE"

      - name: Authenticate to GCP
        run: |
          gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
          gcloud config set project $GCP_PROJECT_ID

      - name: Initialize Terraform
        run: terraform init

      - name: Select Terraform Workspace
        run: terraform workspace select $TF_WORKSPACE || terraform workspace new $TF_WORKSPACE

      - name: Validate Terraform
        run: terraform validate

      - name: Plan Terraform Changes
        run: terraform plan -var="project_id=$GCP_PROJECT_ID" -out=tfplan

      - name: Apply Terraform Changes (Main Branch Only)
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
